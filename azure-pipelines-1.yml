# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - release

resources:
  - repo: self

variables:
  - group: pmis-corefrontend-training

# Agent VM image name
pool:
  vmImage: 'ubuntu-latest'

stages:
  # BuildAndPush stage (Docker)
  - stage: BuildAndPush
    displayName: BuildAndPush
    jobs:
      - job: BuildAndPush
        displayName: BuildAndPush
        steps:
          - task: Docker@2
            displayName: 'Building and pushing Docker image....'
            inputs:
              command: buildAndPush
              repository: $(IMAGE_REPOSITORY)
              tags: $(TAG)
              dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              containerRegistry: 'AlexDockerHubSvcConnection'
              arguments: '--build-arg NEXT_PUBLIC_API_BASE_URL=$(BASE_API_URL)'

  # Trivy scan stage (Trivy)
  - stage: TrivyScan
    displayName: Trivy Scan
    dependsOn: BuildAndPush
    jobs:
      - job: TrivyScanJob
        displayName: Trivy Scan
        steps:
          - task: Bash@3
            displayName: 'Run Trivy Scan'
            inputs:
              targetType: 'inline'
              script: |
                sudo apt-get update && sudo apt-get install -y trivy
                trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(IMAGE_REPOSITORY):$(TAG) || true

  # Deploy to Training Environment
  - stage: DeployToTNTTraining
    displayName: 'Deploy to TNT Training'
    jobs:
      - job: DeploytoTNTTest
        displayName: 'Deploy to TNT Training'
        pool:
          name: 'tnt-selfhosted-trainingpool' # Ensure the pipeline uses the self-hosted agent pool
        steps:
          # Step 1: SSH into On-Prem Server and Deploy using Docker compose
          - task: SSH@0
            displayName: 'Deploy Docker-Compose on tnt test'
            inputs:
              sshEndpoint: 'tntfrontend-trainingsvc' # Your SSH service connection
              runOptions: 'commands' # 'script'
              commands: |
                echo "Starting script..."
                /home/agiledevops/configs/start_core_app.sh
              interactiveSession: true
              readyTimeout: '50000'
