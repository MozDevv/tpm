trigger:
  - main # The pipeline will run on changes to the 'main' branch

# Define the self-hosted agent pool for the entire pipeline
pool:
  name: 'tnt-selfhosted-devpool'

stages:
  # - stage: BuildAndPush
  #   displayName: 'Build and Push Docker Image'
  #   jobs:
  #     - job: BuildAndPush
  #       displayName: 'Build and Push Docker Image'
  #       steps:
  #         # Build and push Docker image to Docker Hub
  #         - task: Docker@2
  #           displayName: 'Building and pushing Docker image with build arguments'
  #           inputs:
  #             command: buildAndPush
  #             repository: $(IMAGE) # Replace with your Docker Hub repository
  #             dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
  #             containerRegistry: 'AlexDockerHubSvcConnection' # Your Docker Hub service connection
  #             tags: $(TAG)

  #         # cleanup
  #         - script: |
  #             echo "Removing local Docker image..."
  #             docker rmi $(IMAGE):$(TAG) || echo "Image not found or already removed"
  #             docker builder prune -a -f
  #           displayName: 'Remove local Docker image'

  - stage: DeployToTest
    displayName: 'Deploy to Test Environment'
    jobs:
      - job: DeployToTest
        displayName: 'Deploy to Test Environment'
        pool:
          name: 'tnt-selfhosted-devpool' # Using self-hosted agent pool for SSH task
        steps:
          # Step 2: SSH into remote server and run start_core_app.sh
          - task: SSH@0
            displayName: 'SSH into remote server and run start_core_app.sh'
            inputs:
              sshEndpoint: 'FrontendSSHServiceConnection' # The SSH service connection name you set up
              runOptions: 'commands' # Running inline commands
              commands: |
                echo "Starting Deployment..."
                ~/configs/start_core_app.sh
                echo "Script execution finished.ðŸ‘ŒðŸŸ¢ðŸŸ¢"
                exit 0
